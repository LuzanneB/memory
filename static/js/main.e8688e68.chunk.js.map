{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","friendClick","Wrapper","children","Title","score","App","state","friends","clicked","sortFriends","_this","sort","b","Math","random","reset","setState","event","console","log","currentFriend","target","id","indexOf","concat","_this2","this","components_Wrapper","components_Title","highscore","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"49CAaeA,MAVf,SAAoBC,GAClB,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,0BAA0BC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,QAAST,EAAMU,sBCArFC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCO1BC,MARf,SAAeb,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBJ,EAAMY,SAA9C,UAA+DZ,EAAMc,gBC0E1DC,6MAxEbC,MAAQ,CACNC,UACAC,QAAQ,GACRJ,MAAM,KAGRK,YAAc,WACZC,EAAKJ,MAAMC,QAAQI,KAAM,SAACnB,EAAEoB,GAAO,MAAO,GAAMC,KAAKC,cAGvDC,MAAQ,WACNL,EAAKM,SAAS,CACZR,QAAQ,GACRJ,MAAM,OAKZJ,YAAc,SAAAiB,GACZC,QAAQC,IAAI,eAEZ,IAAMC,EAAgBH,EAAMI,OAAOC,GAEjBZ,EAAKJ,MAAME,QAAQe,QAAQH,IAAkB,GAK7DV,EAAKD,cACLC,EAAKK,UAGLL,EAAKD,cACLC,EAAKM,SAAS,CACZR,QAASE,EAAKJ,MAAME,QAAQgB,OAAOJ,GAEnChB,MAAOM,EAAKJ,MAAMF,MAAQ,GAG5B,WAC2B,KAArBM,EAAKJ,MAAMF,QACbM,EAAKD,cACLC,EAAKK,qFAYF,IAAAU,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAOxB,MAAOsB,KAAKpB,MAAMF,MAAOyB,UAAWH,KAAKpB,MAAMuB,WAAtD,gBACCH,KAAKpB,MAAMC,QAAQuB,IAAI,SAAAC,GAAM,OAC5BxC,EAAAC,EAAAC,cAACuC,EAAD,CACEV,GAAIS,EAAOT,GACXW,IAAKF,EAAOT,GACZ1B,KAAMmC,EAAOnC,KACbE,MAAOiC,EAAOjC,MACdE,YAAcyB,EAAKzB,wBAlEbkC,mBCDlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e8688e68.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n\n      <div className=\"img-container\" >\n        <img className= \"shadow-lg img-thumbnail\" alt={props.name} src={props.image} onClick={props.friendClick}/>\n      </div>\n\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"Wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return ( \n    <nav className=\"navbar navbar-dark bg-dark mb-2\">\n    <span className=\"navbar-brand mb-0 h1\">{props.children} Score:{props.score}</span>\n    \n    </nav>\n   )}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clicked:[],\n    score:0,\n  };\n\n  sortFriends = () => {\n    this.state.friends.sort( (a,b) => {return 0.5 - Math.random()});\n  };\n\n  reset = () => {\n    this.setState({\n      clicked:[],\n      score:0,\n    })\n  }\n\n// friend click event\nfriendClick = event => {\n  console.log(\"you clicked\")\n\n  const currentFriend = event.target.id;\n  // check to see if that friend has been clicked or not, are they in the state array or not?\n  const isClicked = this.state.clicked.indexOf(currentFriend) > -1;\n \n\n  // if is clicked, end the game, reset the score\n  if (isClicked) {\n    this.sortFriends();\n    this.reset();\n  } else {\n    // we have to update the score, sort the cards\n    this.sortFriends();\n    this.setState({\n      clicked: this.state.clicked.concat(currentFriend),\n      // increase the score\n      score: this.state.score + 1\n    },\n    //restart the game\n    () => {\n      if (this.state.score === 12) {\n        this.sortFriends();\n        this.reset();\n      }\n    });\n  }\n};\n\n\n\n\n\n  \n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} highscore={this.state.highscore}>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            friendClick ={this.friendClick}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}